#!/usr/bin/env python
PACKAGE = "lane_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

group1 = gen.add_group("General_Settings", type="tab")
group1.add("frequency",                 double_t,   0,  "Frequency of the node",                30.0,   0,  50)
group1.add("publish_debug_images",      bool_t,     0,  "Publish various debug images",         True)
group1.add("publish_detection_image",   bool_t,     0,  "Publish image with detection result",  True)
group1.add("draw_lane_lines",           bool_t,     0,  "Draw lane lines on images",            True)
group1.add("draw_waypoint",             bool_t,     0,  "Draw waypoint on images",              True)
group1.add("line_thickness",            int_t,      0,  "Thickness of lane lines on image",     4,  1,  20)
group1.add("waypoint_radius",           int_t,      0,  "Radius of waypoint on image",          6,  1,  20)

## Color and scale settings
group2 = gen.add_group("Left_Lane_Bound", type="tab")
group2_1 = group2.add_group("Scale_L")
group2_1.add("scale_x_l",   double_t,   0,  "Scale in x direction", 0.1,    0,  3)
group2_1.add("scale_y_l",   double_t,   0,  "Scale in y direction", 0.1,    0,  3)
group2_1.add("scale_z_l",   double_t,   0,  "Scale in z direction", 0.1,    0,  3)
group2_2 = group2.add_group("Color_L")
group2_2.add("color_r_l",   int_t,      0,  "Color (red) of left line",     0,      0,      255)
group2_2.add("color_g_l",   int_t,      0,  "Color (green) of left line",   0,      0,      255)
group2_2.add("color_b_l",   int_t,      0,  "Color (blue) of left line",    255,    0,      255)
group2_2.add("color_a_l",   double_t,   0,  "Color (alpha) of left line",   1.0,    0.0,    1.0)

group3 = gen.add_group("Right_Lane_Bound", type="tab")
group3_1 = group3.add_group("Scale_R")
group3_1.add("scale_x_r",   double_t,   0,  "Scale in x direction", 0.1,    0,  3)
group3_1.add("scale_y_r",   double_t,   0,  "Scale in y direction", 0.1,    0,  3)
group3_1.add("scale_z_r",   double_t,   0,  "Scale in z direction", 0.1,    0,  3)
group3_2 = group3.add_group("Color_R")
group3_2.add("color_r_r",   int_t,      0,  "Color (red) of right line",    0,      0,      255)
group3_2.add("color_g_r",   int_t,      0,  "Color (green) of right line",  255,    0,      255)
group3_2.add("color_b_r",   int_t,      0,  "Color (blue) of right line",   0,      0,      255)
group3_2.add("color_a_r",   double_t,   0,  "Color (alpha) of right line",  1.0,    0.0,    1.0)

group4 = gen.add_group("Other_Lane_Bounds", type="tab")
group4_1 = group4.add_group("Scale_O")
group4_1.add("scale_x_o",   double_t,   0,  "Scale in x direction", 0.1,    0,  3)
group4_1.add("scale_y_o",   double_t,   0,  "Scale in y direction", 0.1,    0,  3)
group4_1.add("scale_z_o",   double_t,   0,  "Scale in z direction", 0.1,    0,  3)
group4_2 = group4.add_group("Color_O")
group4_2.add("color_r_o",   int_t,      0,  "Color (red) of other lines",   255,    0,      255)
group4_2.add("color_g_o",   int_t,      0,  "Color (green) of other lines", 0,      0,      255)
group4_2.add("color_b_o",   int_t,      0,  "Color (blue) of other lines",  0,      0,      255)
group4_2.add("color_a_o",   double_t,   0,  "Color (alpha) of other lines", 1.0,    0.0,    1.0)

group5 = gen.add_group("Waypoint", type="tab")
group5_1 = group5.add_group("Scale_Waypoint")
group5_1.add("scale_x_wp",   double_t,   0,  "Scale in x direction",    0.3,    0,  3)
group5_1.add("scale_y_wp",   double_t,   0,  "Scale in y direction",    0.3,    0,  3)
group5_1.add("scale_z_wp",   double_t,   0,  "Scale in z direction",    0.3,    0,  3)
group5_2 = group5.add_group("Color_Waypoint")
group5_2.add("color_r_wp",   int_t,     0,  "Color (red) of waypoint",      255,    0,      255)
group5_2.add("color_g_wp",   int_t,     0,  "Color (green) of waypoint",    140,    0,      255)
group5_2.add("color_b_wp",   int_t,     0,  "Color (blue) of waypoint",     0,      0,      255)
group5_2.add("color_a_wp",   double_t,  0,  "Color (alpha) of waypoint",    1.0,    0.0,    1.0)

exit(gen.generate(PACKAGE, "lane_detection", "LaneVisualizer"))
